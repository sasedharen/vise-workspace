concurrent = 10
check_interval = 5
log_level = "info"
shutdown_timeout = 0

[session_server]
  session_timeout = 1800

# Docker executor runner for general CI/CD tasks
[[runners]]
  name = "docker-runner-shared"
  url = "http://gitlab.vise.local"
  token = "REPLACE_WITH_ACTUAL_TOKEN"
  executor = "docker"
  
  # Performance settings for 500 developers
  limit = 10
  request_concurrency = 5
  
  [runners.docker]
    tls_verify = false
    image = "alpine:3.19"
    privileged = true
    disable_entrypoint_overwrite = false
    oom_kill_disable = false
    disable_cache = false
    volumes = [
      "/var/run/docker.sock:/var/run/docker.sock",
      "/cache",
      "/builds:/builds:rw"
    ]
    shm_size = 268435456  # 256MB for shared memory
    
    # Resource limits
    memory = "2g"
    memory_swap = "4g"
    memory_reservation = "1g"
    cpus = "2.0"
    
    # Network settings
    network_mode = "bridge"
    
    # Pull policy for faster builds
    pull_policy = ["if-not-present", "always"]
    
    # Cache settings
    [runners.docker.tmpfs]
      "/tmp" = "rw,size=100m"
    
  [runners.cache]
    Type = "local"
    Path = "/cache"
    Shared = true
    
    [runners.cache.local]
      MaxUploadedArchiveSize = 1073741824  # 1GB

# Specialized runner for Go backend builds
[[runners]]
  name = "go-backend-runner"
  url = "http://gitlab.vise.local"
  token = "REPLACE_WITH_ACTUAL_TOKEN"
  executor = "docker"
  
  limit = 5
  request_concurrency = 3
  
  [runners.docker]
    tls_verify = false
    image = "golang:1.23-alpine"
    privileged = false
    disable_entrypoint_overwrite = false
    oom_kill_disable = false
    disable_cache = false
    volumes = [
      "/cache",
      "/builds:/builds:rw"
    ]
    
    # Optimized for Go builds
    memory = "3g"
    memory_reservation = "1.5g"
    cpus = "2.5"
    
    # Go-specific environment
    environment = [
      "GOCACHE=/cache/go-build",
      "GOMODCACHE=/cache/go-mod",
      "CGO_ENABLED=1"
    ]
    
    [runners.docker.tmpfs]
      "/tmp" = "rw,size=200m"
      
  [runners.cache]
    Type = "local"
    Path = "/cache"
    Shared = true

# Specialized runner for React frontend builds
[[runners]]
  name = "react-frontend-runner"
  url = "http://gitlab.vise.local"
  token = "REPLACE_WITH_ACTUAL_TOKEN"
  executor = "docker"
  
  limit = 5
  request_concurrency = 3
  
  [runners.docker]
    tls_verify = false
    image = "node:18-alpine"
    privileged = false
    disable_entrypoint_overwrite = false
    oom_kill_disable = false
    disable_cache = false
    volumes = [
      "/cache",
      "/builds:/builds:rw"
    ]
    
    # Optimized for Node.js builds
    memory = "4g"
    memory_reservation = "2g"
    cpus = "3.0"
    
    # Node.js specific environment
    environment = [
      "npm_config_cache=/cache/npm",
      "PLAYWRIGHT_BROWSERS_PATH=/cache/playwright",
      "NODE_ENV=test"
    ]
    
    [runners.docker.tmpfs]
      "/tmp" = "rw,size=500m"
      
  [runners.cache]
    Type = "local"
    Path = "/cache"
    Shared = true

# Database operations runner
[[runners]]
  name = "database-runner"
  url = "http://gitlab.vise.local"
  token = "REPLACE_WITH_ACTUAL_TOKEN"
  executor = "docker"
  
  limit = 3
  request_concurrency = 2
  
  [runners.docker]
    tls_verify = false
    image = "postgres:15-alpine"
    privileged = false
    disable_entrypoint_overwrite = false
    oom_kill_disable = false
    disable_cache = false
    volumes = [
      "/cache",
      "/builds:/builds:rw"
    ]
    
    # Database-specific resources
    memory = "2g"
    memory_reservation = "1g"
    cpus = "1.5"
    
    services = [
      "postgres:15",
      "redis:7-alpine"
    ]
    
  [runners.cache]
    Type = "local"
    Path = "/cache"
    Shared = true

# Security scanning runner
[[runners]]
  name = "security-scanner"
  url = "http://gitlab.vise.local"
  token = "REPLACE_WITH_ACTUAL_TOKEN"
  executor = "docker"
  
  limit = 2
  request_concurrency = 1
  
  [runners.docker]
    tls_verify = false
    image = "alpine:3.19"
    privileged = true  # Required for some security tools
    disable_entrypoint_overwrite = false
    oom_kill_disable = false
    disable_cache = false
    volumes = [
      "/var/run/docker.sock:/var/run/docker.sock",
      "/cache",
      "/builds:/builds:rw"
    ]
    
    # Security scanning resources
    memory = "2g"
    memory_reservation = "1g"
    cpus = "2.0"
    
  [runners.cache]
    Type = "local"
    Path = "/cache"
    Shared = true